// Mocks generated by Mockito 5.4.5 from annotations
// in lords_arena/test/mocks/mock_dependencies.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:lords_arena/features/auth/data/datasources/auth_local_data_source.dart'
    as _i3;
import 'package:lords_arena/features/auth/data/datasources/auth_remote_data_source.dart'
    as _i2;
import 'package:lords_arena/features/auth/data/models/user_model.dart' as _i6;
import 'package:lords_arena/features/auth/data/repositories/auth_repository_impl.dart'
    as _i8;
import 'package:lords_arena/features/auth/domain/repositories/auth_repository.dart'
    as _i9;
import 'package:lords_arena/features/user/data/repositories/user_repository.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.AuthRemoteDataSource {
  _FakeAuthRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthLocalDataSource_1 extends _i1.SmartFake
    implements _i3.AuthLocalDataSource {
  _FakeAuthLocalDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i2.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i6.UserModel?> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<_i6.UserModel?> signup(
    String? username,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            username,
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveUser(
    String? email, {
    required String? userId,
    required String? token,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [email],
          {
            #userId: userId,
            #token: token,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void clearUserData() => super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i8.AuthRepositoryImpl {
  MockAuthRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeAuthRemoteDataSource_0(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i2.AuthRemoteDataSource);

  @override
  _i3.AuthLocalDataSource get localDataSource => (super.noSuchMethod(
        Invocation.getter(#localDataSource),
        returnValue: _FakeAuthLocalDataSource_1(
          this,
          Invocation.getter(#localDataSource),
        ),
      ) as _i3.AuthLocalDataSource);

  @override
  _i5.Future<_i6.UserModel?> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<_i6.UserModel?> signup(
    String? username,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            username,
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<void> saveUser(_i6.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i6.UserModel?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i9.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.UserModel?> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<_i6.UserModel?> signup(
    String? username,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            username,
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<void> saveUser(_i6.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i6.UserModel?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i5.Future<_i6.UserModel?>.value(),
      ) as _i5.Future<_i6.UserModel?>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
